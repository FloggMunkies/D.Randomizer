[gd_scene load_steps=129 format=2]

[ext_resource path="res://Logic.tscn" type="PackedScene" id=1]
[ext_resource path="res://GUI/Logic/Characters/Tiny_Button.tscn" type="PackedScene" id=2]
[ext_resource path="res://GUI/Logic/Characters/DK_Button.tscn" type="PackedScene" id=3]
[ext_resource path="res://GUI/Logic/Characters/Lanky_Button.tscn" type="PackedScene" id=4]
[ext_resource path="res://GUI/Logic/Characters/Chunky_Button.tscn" type="PackedScene" id=5]
[ext_resource path="res://GUI/Logic/Characters/Diddy_Button.tscn" type="PackedScene" id=6]
[ext_resource path="res://GUI/Logic/Pads/DK_Pad_Button.tscn" type="PackedScene" id=7]
[ext_resource path="res://GUI/Logic/Pads/Tiny_Pad_Button.tscn" type="PackedScene" id=8]
[ext_resource path="res://GUI/Logic/Pads/Chunky_Pad_Button.tscn" type="PackedScene" id=9]
[ext_resource path="res://GUI/Logic/Pads/Diddy_Pad_Button.tscn" type="PackedScene" id=10]
[ext_resource path="res://GUI/Logic/Pads/Lanky_Pad_Button.tscn" type="PackedScene" id=11]
[ext_resource path="res://GUI/Logic/Guns/Lanky_Gun_Button.tscn" type="PackedScene" id=12]
[ext_resource path="res://GUI/Logic/Guns/Chunky_Gun_Button.tscn" type="PackedScene" id=13]
[ext_resource path="res://GUI/Logic/Guns/DK_Gun_Button.tscn" type="PackedScene" id=14]
[ext_resource path="res://GUI/Logic/Instruments/Chunky_Instrument_Button.tscn" type="PackedScene" id=15]
[ext_resource path="res://GUI/Logic/Instruments/Tiny_Instrument_Button.tscn" type="PackedScene" id=16]
[ext_resource path="res://GUI/Logic/Guns/Tiny_Gun_Button.tscn" type="PackedScene" id=17]
[ext_resource path="res://GUI/Logic/Instruments/Lanky_Instrument_Button.tscn" type="PackedScene" id=18]
[ext_resource path="res://GUI/Logic/Instruments/Diddy_Instrument_Button.tscn" type="PackedScene" id=19]
[ext_resource path="res://GUI/Logic/Guns/Diddy_Gun_Button.tscn" type="PackedScene" id=20]
[ext_resource path="res://GUI/Logic/Instruments/DK_Instrument_Button.tscn" type="PackedScene" id=21]
[ext_resource path="res://GUI/Logic/Barrels/Tiny_Barrel_Button.tscn" type="PackedScene" id=22]
[ext_resource path="res://GUI/Logic/Moves/DK_Move_Button.tscn" type="PackedScene" id=23]
[ext_resource path="res://GUI/Logic/Moves/Diddy_Move_Button.tscn" type="PackedScene" id=24]
[ext_resource path="res://GUI/Logic/Moves/Tiny_Move_Button.tscn" type="PackedScene" id=25]
[ext_resource path="res://GUI/Logic/Moves/Chunky_Move_Button.tscn" type="PackedScene" id=26]
[ext_resource path="res://GUI/Logic/Barrels/DK_Barrel_Button.tscn" type="PackedScene" id=27]
[ext_resource path="res://GUI/Logic/Barrels/Diddy_Barrel_Button.tscn" type="PackedScene" id=28]
[ext_resource path="res://GUI/Logic/Moves/Lanky_Move_Button.tscn" type="PackedScene" id=29]
[ext_resource path="res://GUI/Logic/Barrels/Chunky_Barrel_Button.tscn" type="PackedScene" id=30]
[ext_resource path="res://GUI/Logic/Barrels/Lanky_Barrel_Button.tscn" type="PackedScene" id=31]
[ext_resource path="res://GUI/Logic/Extra Moves/Sniper_Lens.tscn" type="PackedScene" id=32]
[ext_resource path="res://GUI/Logic/Extra Moves/Super_Slam.tscn" type="PackedScene" id=33]
[ext_resource path="res://sprites/Fairy_Icon.png" type="Texture" id=34]
[ext_resource path="res://GUI/Logic/Extra Moves/Swim_Button.tscn" type="PackedScene" id=35]
[ext_resource path="res://GUI/Logic/Extra Moves/Vine_Button.tscn" type="PackedScene" id=36]
[ext_resource path="res://GUI/Logic/Extra Moves/Barrel_Throw_Button.tscn" type="PackedScene" id=37]
[ext_resource path="res://sprites/images/Crown_Icon.bmp" type="Texture" id=38]
[ext_resource path="res://GUI/Logic/Settings/Settings_Button.tscn" type="PackedScene" id=39]
[ext_resource path="res://GUI/Logic/Extra Moves/Orange.tscn" type="PackedScene" id=40]
[ext_resource path="res://Maps/Maps.tscn" type="PackedScene" id=41]
[ext_resource path="res://GUI/Logic/Counters/Counter.tscn" type="PackedScene" id=42]
[ext_resource path="res://sprites/images/Banana_Medal_Icon.bmp" type="Texture" id=43]
[ext_resource path="res://sprites/images/Blueprint_Icon.bmp" type="Texture" id=44]
[ext_resource path="res://GUI/Logic/Misc Flags/Japes_Kong_Button.tscn" type="PackedScene" id=45]
[ext_resource path="res://GUI/Logic/Misc Flags/Key_2.tscn" type="PackedScene" id=46]
[ext_resource path="res://GUI/Logic/Misc Flags/Key_6.tscn" type="PackedScene" id=47]
[ext_resource path="res://GUI/Logic/Misc Flags/Key_7.tscn" type="PackedScene" id=48]
[ext_resource path="res://OLD/Button.gd" type="Script" id=49]
[ext_resource path="res://sprites/Barrel_Icon.png" type="Texture" id=50]
[ext_resource path="res://sprites/images/Film_Icon.bmp" type="Texture" id=51]
[ext_resource path="res://sprites/images/Ammo_Icon.bmp" type="Texture" id=52]
[ext_resource path="res://sprites/images/Crystal_Coconut_Icon.bmp" type="Texture" id=53]
[ext_resource path="res://GUI/Logic/Levels/Level_Lobby_Button.tscn" type="PackedScene" id=54]
[ext_resource path="res://OLD/default_shader.tres" type="Shader" id=55]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/clicked = false

[sub_resource type="Shader" id=3]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/clicked = false

[sub_resource type="Shader" id=5]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/clicked = false

[sub_resource type="Shader" id=7]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/clicked = false

[sub_resource type="Shader" id=9]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/clicked = false

[sub_resource type="Shader" id=21]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=22]
resource_local_to_scene = true
shader = SubResource( 21 )
shader_param/clicked = false

[sub_resource type="Shader" id=23]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=24]
resource_local_to_scene = true
shader = SubResource( 23 )
shader_param/clicked = false

[sub_resource type="Shader" id=25]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=26]
resource_local_to_scene = true
shader = SubResource( 25 )
shader_param/clicked = false

[sub_resource type="Shader" id=27]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=28]
resource_local_to_scene = true
shader = SubResource( 27 )
shader_param/clicked = false

[sub_resource type="Shader" id=29]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 29 )
shader_param/clicked = false

[sub_resource type="Shader" id=31]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = SubResource( 31 )
shader_param/clicked = false

[sub_resource type="Shader" id=33]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=34]
resource_local_to_scene = true
shader = SubResource( 33 )
shader_param/clicked = false

[sub_resource type="Shader" id=35]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=36]
resource_local_to_scene = true
shader = SubResource( 35 )
shader_param/clicked = false

[sub_resource type="Shader" id=37]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=38]
resource_local_to_scene = true
shader = SubResource( 37 )
shader_param/clicked = false

[sub_resource type="Shader" id=39]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=40]
resource_local_to_scene = true
shader = SubResource( 39 )
shader_param/clicked = false

[sub_resource type="Shader" id=41]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=42]
resource_local_to_scene = true
shader = SubResource( 41 )
shader_param/clicked = false

[sub_resource type="Shader" id=43]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=44]
resource_local_to_scene = true
shader = SubResource( 43 )
shader_param/clicked = false

[sub_resource type="Shader" id=45]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=46]
resource_local_to_scene = true
shader = SubResource( 45 )
shader_param/clicked = false

[sub_resource type="Shader" id=47]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=48]
resource_local_to_scene = true
shader = SubResource( 47 )
shader_param/clicked = false

[sub_resource type="Shader" id=49]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=50]
resource_local_to_scene = true
shader = SubResource( 49 )
shader_param/clicked = false

[sub_resource type="Shader" id=51]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=52]
resource_local_to_scene = true
shader = SubResource( 51 )
shader_param/clicked = false

[sub_resource type="Shader" id=53]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=54]
resource_local_to_scene = true
shader = SubResource( 53 )
shader_param/clicked = false

[sub_resource type="Shader" id=55]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=56]
resource_local_to_scene = true
shader = SubResource( 55 )
shader_param/clicked = false

[sub_resource type="Shader" id=57]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=58]
resource_local_to_scene = true
shader = SubResource( 57 )
shader_param/clicked = false

[sub_resource type="Shader" id=59]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=60]
resource_local_to_scene = true
shader = SubResource( 59 )
shader_param/clicked = false

[sub_resource type="Shader" id=11]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/clicked = false

[sub_resource type="Shader" id=13]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/clicked = false

[sub_resource type="Shader" id=15]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = SubResource( 15 )
shader_param/clicked = false

[sub_resource type="Shader" id=17]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = SubResource( 17 )
shader_param/clicked = false

[sub_resource type="Shader" id=19]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=20]
resource_local_to_scene = true
shader = SubResource( 19 )
shader_param/clicked = false

[sub_resource type="Shader" id=89]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=90]
resource_local_to_scene = true
shader = SubResource( 89 )
shader_param/clicked = false

[sub_resource type="ShaderMaterial" id=93]
shader = ExtResource( 55 )
shader_param/clicked = false

[sub_resource type="Shader" id=61]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==63.0/255.0 && col.g==72.0/255.0 && col.b==204.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=62]
resource_local_to_scene = true
shader = SubResource( 61 )
shader_param/clicked = false

[sub_resource type="Shader" id=63]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=64]
resource_local_to_scene = true
shader = SubResource( 63 )
shader_param/clicked = false

[sub_resource type="Shader" id=65]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=66]
resource_local_to_scene = true
shader = SubResource( 65 )
shader_param/clicked = false

[sub_resource type="Shader" id=67]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=68]
resource_local_to_scene = true
shader = SubResource( 67 )
shader_param/clicked = false

[sub_resource type="Shader" id=91]
resource_local_to_scene = true
code = "shader_type canvas_item;

//void fragment(){
//	COLOR = texture(TEXTURE, UV);
//	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
//	COLOR.rgb = vec3(lumi);
//}

uniform bool clicked=false;

void fragment(){
vec4 col = texture(TEXTURE,UV).rgba;
if (col.r==0.0/255.0 && col.g==0.0/255.0 && col.b==0.0/255.0) {
    col.a=0.0;
}
COLOR=col;
if (clicked){
	float lumi = (COLOR.r +COLOR.g+COLOR.b) / 3.0;
	COLOR.rgb = vec3(lumi);
	}
}
"

[sub_resource type="ShaderMaterial" id=92]
resource_local_to_scene = true
shader = SubResource( 91 )
shader_param/clicked = false

[node name="Main" type="Node2D"]

[node name="TabContainer" type="TabContainer" parent="."]
margin_right = 1280.0
margin_bottom = 960.0

[node name="Logic" type="Tabs" parent="TabContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="Logic" parent="TabContainer/Logic" instance=ExtResource( 1 )]

[node name="Logic" type="GridContainer" parent="TabContainer/Logic/Logic"]
margin_right = 508.0
margin_bottom = 544.0
columns = 5

[node name="DK" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 3 )]
material = SubResource( 2 )
margin_right = 99.0
margin_bottom = 65.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true
script = ExtResource( 49 )

[node name="Diddy" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 6 )]
material = SubResource( 4 )
margin_left = 103.0
margin_right = 202.0
margin_bottom = 65.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Lanky" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 4 )]
material = SubResource( 6 )
margin_left = 206.0
margin_right = 304.0
margin_bottom = 65.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Tiny" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 2 )]
material = SubResource( 8 )
margin_left = 308.0
margin_right = 406.0
margin_bottom = 65.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Chunky" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 5 )]
material = SubResource( 10 )
margin_left = 410.0
margin_right = 508.0
margin_bottom = 65.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Coconut" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 14 )]
material = SubResource( 22 )
margin_top = 69.0
margin_right = 99.0
margin_bottom = 134.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Peanut" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 20 )]
material = SubResource( 24 )
margin_left = 103.0
margin_top = 69.0
margin_right = 202.0
margin_bottom = 134.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Grape" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 12 )]
material = SubResource( 26 )
margin_left = 206.0
margin_top = 69.0
margin_right = 304.0
margin_bottom = 134.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Feather" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 17 )]
material = SubResource( 28 )
margin_left = 308.0
margin_top = 69.0
margin_right = 406.0
margin_bottom = 134.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Pineapple" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 13 )]
material = SubResource( 30 )
margin_left = 410.0
margin_top = 69.0
margin_right = 508.0
margin_bottom = 134.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Bongos" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 21 )]
material = SubResource( 32 )
margin_top = 138.0
margin_right = 99.0
margin_bottom = 203.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Guitar" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 19 )]
material = SubResource( 34 )
margin_left = 103.0
margin_top = 138.0
margin_right = 202.0
margin_bottom = 203.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Trombone" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 18 )]
material = SubResource( 36 )
margin_left = 206.0
margin_top = 138.0
margin_right = 304.0
margin_bottom = 203.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Saxaphone" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 16 )]
material = SubResource( 38 )
margin_left = 308.0
margin_top = 138.0
margin_right = 406.0
margin_bottom = 203.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Triangle" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 15 )]
material = SubResource( 40 )
margin_left = 410.0
margin_top = 138.0
margin_right = 508.0
margin_bottom = 203.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Gorilla Grab" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 23 )]
material = SubResource( 42 )
margin_top = 207.0
margin_right = 99.0
margin_bottom = 272.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Chimpy Charge" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 24 )]
material = SubResource( 44 )
margin_left = 103.0
margin_top = 207.0
margin_right = 202.0
margin_bottom = 272.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Orangstand" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 29 )]
material = SubResource( 46 )
margin_left = 206.0
margin_top = 207.0
margin_right = 304.0
margin_bottom = 272.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Ponytail Twirl" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 25 )]
material = SubResource( 48 )
margin_left = 308.0
margin_top = 207.0
margin_right = 406.0
margin_bottom = 272.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Primate Punch" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 26 )]
material = SubResource( 50 )
margin_left = 410.0
margin_top = 207.0
margin_right = 508.0
margin_bottom = 272.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Strong Kong" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 27 )]
material = SubResource( 52 )
margin_top = 276.0
margin_right = 99.0
margin_bottom = 340.0
align = 1
icon_align = 1
expand_icon = true

[node name="Rocketbarrel Boost" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 28 )]
material = SubResource( 54 )
margin_left = 103.0
margin_top = 276.0
margin_right = 202.0
margin_bottom = 340.0
align = 1
icon_align = 1
expand_icon = true

[node name="Orangstand Sprint" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 31 )]
material = SubResource( 56 )
margin_left = 206.0
margin_top = 276.0
margin_right = 304.0
margin_bottom = 340.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Mini Monkey" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 22 )]
material = SubResource( 58 )
margin_left = 308.0
margin_top = 276.0
margin_right = 406.0
margin_bottom = 340.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Hunky Chunky" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 30 )]
material = SubResource( 60 )
margin_left = 410.0
margin_top = 276.0
margin_right = 508.0
margin_bottom = 340.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Baboon Blast" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 7 )]
material = SubResource( 12 )
margin_top = 344.0
margin_right = 99.0
margin_bottom = 408.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1

[node name="Simian Spring" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 10 )]
material = SubResource( 14 )
margin_left = 103.0
margin_top = 344.0
margin_right = 202.0
margin_bottom = 408.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Baoon Balloon" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 11 )]
material = SubResource( 16 )
margin_left = 206.0
margin_top = 344.0
margin_right = 304.0
margin_bottom = 408.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Monkeyport" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 8 )]
material = SubResource( 18 )
margin_left = 308.0
margin_top = 344.0
margin_right = 406.0
margin_bottom = 408.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Gorilla Gone" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 9 )]
material = SubResource( 20 )
margin_left = 410.0
margin_top = 344.0
margin_right = 508.0
margin_bottom = 408.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Simian Slam" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 33 )]
margin_top = 412.0
margin_right = 99.0
margin_bottom = 476.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Dive" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 35 )]
margin_left = 103.0
margin_top = 412.0
margin_right = 202.0
margin_bottom = 476.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Orange" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 40 )]
material = SubResource( 90 )
margin_left = 206.0
margin_top = 412.0
margin_right = 304.0
margin_bottom = 476.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Barrel Throw" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 37 )]
margin_left = 308.0
margin_top = 412.0
margin_right = 406.0
margin_bottom = 476.0
rect_scale = Vector2( 1, 1 )
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 50 )
align = 1
icon_align = 1
expand_icon = true

[node name="Vine" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 36 )]
margin_left = 410.0
margin_top = 412.0
margin_right = 508.0
margin_bottom = 476.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Sniper" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 32 )]
margin_top = 480.0
margin_right = 99.0
margin_bottom = 544.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Camera - FIX ME" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 32 )]
material = SubResource( 93 )
margin_left = 103.0
margin_top = 480.0
margin_right = 202.0
margin_bottom = 544.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 51 )
align = 1
icon_align = 1
expand_icon = true

[node name="Shockwave  - FIX ME" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 32 )]
margin_left = 206.0
margin_top = 480.0
margin_right = 304.0
margin_bottom = 544.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 53 )
align = 1
icon_align = 1
expand_icon = true

[node name="Homing Ammo  - FIX ME" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 32 )]
margin_left = 308.0
margin_top = 480.0
margin_right = 406.0
margin_bottom = 544.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 52 )
align = 1
icon_align = 1
expand_icon = true

[node name="Japes_Kong" parent="TabContainer/Logic/Logic/Logic" instance=ExtResource( 45 )]
material = SubResource( 62 )
margin_left = 410.0
margin_top = 480.0
margin_right = 508.0
margin_bottom = 544.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Levels" type="VBoxContainer" parent="TabContainer/Logic/Logic"]
margin_left = 508.0
margin_top = -8.0
margin_right = 764.0
margin_bottom = 608.0

[node name="Japes" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_bottom = 84.0
level = "japes"

[node name="Aztec" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_top = 88.0
margin_bottom = 173.0
text = "Angry Aztec:"
level = "aztec"

[node name="Factory" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_top = 177.0
margin_bottom = 261.0
text = "Frantic Factory:"
level = "factory"

[node name="Galleon" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_top = 265.0
margin_bottom = 350.0
text = "Gloomy Galleon:"
level = "galleon"

[node name="Forest" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_top = 354.0
margin_bottom = 438.0
text = "Fungi Forest:"
level = "forest"

[node name="Caves" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_top = 442.0
margin_bottom = 527.0
text = "Crystal Caves:"
level = "caves"

[node name="Castle" parent="TabContainer/Logic/Logic/Levels" instance=ExtResource( 54 )]
margin_top = 531.0
margin_bottom = 616.0
text = "Creepy Castle:"
level = "castle"

[node name="Misc Flags" type="GridContainer" parent="TabContainer/Logic/Logic"]
margin_left = -4.0
margin_top = 544.0
margin_right = 508.0
margin_bottom = 608.0
columns = 8

[node name="Key_1_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 46 )]
material = SubResource( 64 )
margin_right = 61.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
text = "1"
expand_icon = true

[node name="Key_2_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 46 )]
material = SubResource( 64 )
margin_left = 65.0
margin_right = 126.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
expand_icon = true

[node name="Key_3_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 46 )]
material = SubResource( 64 )
margin_left = 130.0
margin_right = 191.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
text = "3"
expand_icon = true

[node name="Key_4_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 46 )]
material = SubResource( 64 )
margin_left = 195.0
margin_right = 256.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
text = "4"
expand_icon = true

[node name="Key_5_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 46 )]
material = SubResource( 64 )
margin_left = 260.0
margin_right = 320.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
text = "5"
expand_icon = true

[node name="Key_6_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 47 )]
material = SubResource( 66 )
margin_left = 324.0
margin_right = 384.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
expand_icon = true

[node name="Key_7_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 48 )]
material = SubResource( 68 )
margin_left = 388.0
margin_right = 448.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
expand_icon = true

[node name="Key_8_Button" parent="TabContainer/Logic/Logic/Misc Flags" instance=ExtResource( 46 )]
material = SubResource( 64 )
margin_left = 452.0
margin_right = 512.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
text = "8"
expand_icon = true

[node name="Settings" type="GridContainer" parent="TabContainer/Logic/Logic"]
margin_left = 1056.0
margin_top = -8.0
margin_right = 1272.0
margin_bottom = 608.0

[node name="Bananaport" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_right = 216.0
margin_bottom = 65.0
size_flags_horizontal = 3
size_flags_vertical = 3
pressed = true

[node name="Shop Location" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 69.0
margin_right = 216.0
margin_bottom = 134.0
hint_tooltip = ""
size_flags_horizontal = 3
size_flags_vertical = 3
pressed = true
text = "Shuffle Shop Location"

[node name="Kasplats" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 138.0
margin_right = 216.0
margin_bottom = 203.0
hint_tooltip = "OFF : Vanilla

ON: Vanilla Locations

(If using Location Shuffle, just ignore hints and availability highlights)"
size_flags_horizontal = 3
size_flags_vertical = 3
pressed = true
text = "Shuffle Kasplats"

[node name="Training" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 207.0
margin_right = 216.0
margin_bottom = 272.0
hint_tooltip = "OFF : Vanilla

ON: Shuffled"
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Training Barrels"

[node name="Fairy Island" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 276.0
margin_right = 216.0
margin_bottom = 341.0
hint_tooltip = "OFF : Vanilla

ON: This check is not currently listed below, so if this is ON, make sure to check it when you have Tiny + Mini Monkey"
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Fairy Island"

[node name="Bananaports2" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 345.0
margin_right = 216.0
margin_bottom = 410.0
hint_tooltip = "OFF : Vanilla

ON: In-Level

NOTE: If Activate Bananaports and Shuffle Bananaports are both on, you may be able to access more checks than predicted."
size_flags_horizontal = 3
size_flags_vertical = 3
pressed = true
text = "Shuffle Bananaports"

[node name="Lobbies" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 414.0
margin_right = 216.0
margin_bottom = 479.0
hint_tooltip = ""
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Open Lobbies"

[node name="Levels" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 483.0
margin_right = 216.0
margin_bottom = 548.0
hint_tooltip = ""
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Open Levels"

[node name="High Requirments" parent="TabContainer/Logic/Logic/Settings" instance=ExtResource( 39 )]
margin_top = 552.0
margin_right = 216.0
margin_bottom = 616.0
hint_tooltip = "Aztec: Feeds the hungry tower enabling the Gun Temple and Buzzard Race.

Factory: Production Room Powered On.

Galleon: K Rool Ship Spawned

Caves: Igloo Music Pads Spawned."
size_flags_horizontal = 3
size_flags_vertical = 3
pressed = true
text = "High Requirments"

[node name="Counters" type="HBoxContainer" parent="TabContainer/Logic/Logic"]
margin_left = -4.0
margin_top = 608.0
margin_right = 508.0
margin_bottom = 672.0

[node name="GB_Counter" parent="TabContainer/Logic/Logic/Counters" instance=ExtResource( 42 )]
material = SubResource( 92 )
margin_right = 99.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
align = 1
icon_align = 1
expand_icon = true

[node name="Crown_Counter" parent="TabContainer/Logic/Logic/Counters" instance=ExtResource( 42 )]
material = SubResource( 92 )
margin_left = 103.0
margin_right = 202.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 38 )
align = 1
icon_align = 1
expand_icon = true

[node name="Fairy_Counter" parent="TabContainer/Logic/Logic/Counters" instance=ExtResource( 42 )]
material = SubResource( 92 )
margin_left = 206.0
margin_right = 305.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 34 )
align = 1
icon_align = 1
expand_icon = true

[node name="BM_Counter" parent="TabContainer/Logic/Logic/Counters" instance=ExtResource( 42 )]
material = SubResource( 92 )
margin_left = 309.0
margin_right = 408.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 43 )
align = 1
icon_align = 1
expand_icon = true

[node name="BP_Counter" parent="TabContainer/Logic/Logic/Counters" instance=ExtResource( 42 )]
material = SubResource( 92 )
margin_left = 412.0
margin_right = 512.0
margin_bottom = 64.0
size_flags_horizontal = 3
size_flags_vertical = 3
icon = ExtResource( 44 )
align = 1
icon_align = 1
expand_icon = true

[node name="Maps" type="Tabs" parent="TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="Maps" parent="TabContainer/Maps" instance=ExtResource( 41 )]

[connection signal="update_checks" from="TabContainer/Logic/Logic" to="TabContainer/Maps/Maps" method="_on_Logic_update_checks"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/DK" to="TabContainer/Logic/Logic" method="_on_DK_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Diddy" to="TabContainer/Logic/Logic" method="_on_Diddy_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Lanky" to="TabContainer/Logic/Logic" method="_on_Lanky_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Tiny" to="TabContainer/Logic/Logic" method="_on_Tiny_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Chunky" to="TabContainer/Logic/Logic" method="_on_Chunky_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Coconut" to="TabContainer/Logic/Logic" method="_on_DK_Gun_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Peanut" to="TabContainer/Logic/Logic" method="_on_Diddy_Gun_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Grape" to="TabContainer/Logic/Logic" method="_on_Lanky_Gun_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Feather" to="TabContainer/Logic/Logic" method="_on_Tiny_Gun_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Pineapple" to="TabContainer/Logic/Logic" method="_on_Chunky_Gun_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Bongos" to="TabContainer/Logic/Logic" method="_on_DK_Instrument_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Guitar" to="TabContainer/Logic/Logic" method="_on_Diddy_Instrument_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Trombone" to="TabContainer/Logic/Logic" method="_on_Lanky_Instrument_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Saxaphone" to="TabContainer/Logic/Logic" method="_on_Tiny_Instrument_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Triangle" to="TabContainer/Logic/Logic" method="_on_Chunky_Instrument_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Gorilla Grab" to="TabContainer/Logic/Logic" method="_on_DK_Move_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Chimpy Charge" to="TabContainer/Logic/Logic" method="_on_Diddy_Move_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Orangstand" to="TabContainer/Logic/Logic" method="_on_Lanky_Move_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Ponytail Twirl" to="TabContainer/Logic/Logic" method="_on_Tiny_Move_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Primate Punch" to="TabContainer/Logic/Logic" method="_on_Chunky_Move_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Strong Kong" to="TabContainer/Logic/Logic" method="_on_DK_Barrel_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Rocketbarrel Boost" to="TabContainer/Logic/Logic" method="_on_Diddy_Barrel_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Orangstand Sprint" to="TabContainer/Logic/Logic" method="_on_Lanky_Barrel_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Mini Monkey" to="TabContainer/Logic/Logic" method="_on_Tiny_Barrel_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Hunky Chunky" to="TabContainer/Logic/Logic" method="_on_Chunky_Barrel_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Baboon Blast" to="TabContainer/Logic/Logic" method="_on_DK_Pad_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Simian Spring" to="TabContainer/Logic/Logic" method="_on_Diddy_Pad_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Baoon Balloon" to="TabContainer/Logic/Logic" method="_on_Lanky_Pad_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Monkeyport" to="TabContainer/Logic/Logic" method="_on_Tiny_Pad_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Gorilla Gone" to="TabContainer/Logic/Logic" method="_on_Chunky_Pad_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Simian Slam" to="TabContainer/Logic/Logic" method="_on_Super_Slam_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Dive" to="TabContainer/Logic/Logic" method="_on_Swim_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Orange" to="TabContainer/Logic/Logic" method="_on_Orange_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Barrel Throw" to="TabContainer/Logic/Logic" method="_on_Barrel_Throw_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Vine" to="TabContainer/Logic/Logic" method="_on_Vine_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Sniper" to="TabContainer/Logic/Logic" method="_on_Sniper_Lens_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Camera - FIX ME" to="TabContainer/Logic/Logic" method="_on_Sniper_Lens_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Shockwave  - FIX ME" to="TabContainer/Logic/Logic" method="_on_Sniper_Lens_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Homing Ammo  - FIX ME" to="TabContainer/Logic/Logic" method="_on_Sniper_Lens_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Logic/Japes_Kong" to="TabContainer/Logic/Logic" method="_on_Japes_Kong_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Misc Flags/Key_2_Button" to="TabContainer/Logic/Logic" method="_on_Key_2_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Misc Flags/Key_6_Button" to="TabContainer/Logic/Logic" method="_on_Key_6_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Misc Flags/Key_7_Button" to="TabContainer/Logic/Logic" method="_on_Key_7_Button_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Bananaport" to="TabContainer/Logic/Logic" method="_on_Bananaport_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Shop Location" to="TabContainer/Logic/Logic" method="_on_Shop_Location_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Kasplats" to="TabContainer/Logic/Logic" method="_on_Kasplats_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Training" to="TabContainer/Logic/Logic" method="_on_Training_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Fairy Island" to="TabContainer/Logic/Logic" method="_on_Fairy_Island_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Bananaports2" to="TabContainer/Logic/Logic" method="_on_Bananaports2_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Lobbies" to="TabContainer/Logic/Logic" method="_on_Lobbies_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/Levels" to="TabContainer/Logic/Logic" method="_on_Levels_pressed"]
[connection signal="pressed" from="TabContainer/Logic/Logic/Settings/High Requirments" to="TabContainer/Logic/Logic" method="_on_High_Requirments_pressed"]
